{
  "version": 3,
  "file": "angular-timesince.umd.min.js",
  "sources": [
    "~/@thisissoon/angular-timesince/src/app/time-since/shared/durations.ts",
    "~/@thisissoon/angular-timesince/src/app/time-since/time-since.pipe.ts",
    "~/@thisissoon/angular-timesince/src/app/time-since/time-since.module.ts",
    "~/@thisissoon/angular-timesince/angular-timesince.ts"
  ],
  "sourcesContent": [
    "export const secondsInYear = 31536000;\nexport const secondsInMonth = 2592000;\nexport const secondsInDay = 86400;\nexport const secondsInHour = 3600;\nexport const secondsInMin = 60;\nexport const millisecondsInSecond = 1000;\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as durations from './shared/durations';\n\n/**\n * Based on {@link http://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site}\n * Returns the number of seconds, minutes, days, months or years since\n * any Date object based on the current system time\n *\n * @example\n * ```html\n *  <p>{{ date | timeSince }} ago</p>\n * ```\n *\n * @export\n * @class TimeSincePipe\n * @implements {PipeTransform}\n */\n@Pipe({\n  name: 'timeSince'\n})\nexport class TimeSincePipe implements PipeTransform {\n  /**\n   * Attempt to convert the input into a Date object and return the original\n   * input if not a valid date. If input is a valid date then calculate the\n   * time in seconds from Date Object to 'now'. Then try to divide the number\n   * of seconds between now and the date by the number of seconds in a year,\n   * month, day, hour or minute\n   *\n   *\n   * @param {*} value\n   * @param {*} [args]\n   * @returns {*}\n   * @memberof TimeSincePipe\n   */\n  public transform(value: any, args?: any): any {\n    const date: Date = new Date(value);\n\n    if (isNaN(date.getTime())) {\n      return value;\n    }\n\n    const seconds = Math.abs(\n      Math.floor(\n        (new Date().getTime() - date.getTime()) / durations.millisecondsInSecond\n      )\n    );\n\n    let interval = Math.floor(seconds / durations.secondsInYear);\n\n    if (interval > 1) { return `${interval} years`; }\n    if (interval === 1) { return `${interval} year`; }\n\n    interval = Math.floor(seconds / durations.secondsInMonth);\n\n    if (interval > 1) { return `${interval} months`; }\n    if (interval === 1) { return `${interval} month`; }\n\n    interval = Math.floor(seconds / durations.secondsInDay);\n\n    if (interval > 1) { return `${interval} days`; }\n    if (interval === 1) { return `${interval} day`; }\n\n    interval = Math.floor(seconds / durations.secondsInHour);\n\n    if (interval > 1) { return `${interval} hours`; }\n    if (interval === 1) { return `${interval} hour`; }\n\n    interval = Math.floor(seconds / durations.secondsInMin);\n\n    if (interval > 1) { return `${interval} minutes`; }\n    if (interval === 1) { return `${interval} minute`; }\n\n    return `${Math.floor(seconds)} ${seconds === 1 ? 'second' : 'seconds'}`;\n  }\n}\n",
    "import { NgModule } from '@angular/core';\n\nimport { TimeSincePipe } from './time-since.pipe';\n\n/**\n * A simple lightweight library for Angular 2/4+ which returns the\n * number of seconds, minutes, days, months or years since any Date\n * object based on the current system time\n *\n * @export\n * @class TimeSinceModule\n */\n@NgModule({\n  declarations: [TimeSincePipe],\n  exports: [TimeSincePipe]\n})\nexport class TimeSinceModule { }\n",
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"
  ],
  "names": [
    "__decorate$1",
    "this",
    "__decorate",
    "decorators",
    "target",
    "key",
    "desc",
    "c",
    "r",
    "Object",
    "defineProperty",
    "TimeSincePipe",
    "prototype",
    "transform",
    "value",
    "args",
    "date",
    "Date",
    "isNaN",
    "getTime",
    "seconds",
    "Math",
    "abs",
    "floor",
    "interval",
    "Reflect",
    "decorate"
  ],
  "mappings": "2SAKAA,EAAAC,MAAAA,KAAwCC,YAAxC,SAAAC,EAAAC,EAAAC,EAAAC,sQCLA,OAAAC,EAAA,GAAAC,GAAAC,OAAAC,eAAAN,EAAAC,EAAAG,GAAAA,4CAoBA,OAoBAG,EAAAC,UAAAC,UAAA,SAAAC,EAAAC,GAEI,IAAJC,EAAA,IAAAC,KAAwBH,GAMpB,GAAII,MAARF,EAAmBG,WAEX,OAARL,EAAA,IAAAM,EAAAC,KAAAC,IAAAD,KAAAE,QAAA,IAAAN,MAAAE,UAAAH,EAAAG,WD9CA,MC+CQK,EAARH,KAAwBE,MAAxBH,WAAA,OAA0BI,EAA1B,EAAAA,EAAA,SAIA,IAAQA,EAAuBA,EAAW,SACtCA,EAAJH,KAAAE,MAAAH,EDxDA,SCwDA,EAAAI,EAAA,UAIA,IAAQA,EAAuBA,EAAW,UACtCA,EAAJH,KAAAE,MAAAH,ED5DA,QC4DA,EAAAI,EAAA,QAIA,IAAQA,EAAuBA,EAAW,QACtCA,EAAJH,KAAAE,MAAAH,EDhEA,OCgEA,EAAAI,EAAA,SAIA,IAAQA,EAAuBA,EAAW,SACtCA,EAAJH,KAAAE,MAAAH,EDpE0B,KCoE1B,EAAAI,EAAA,WAGA,IAAAA,EACAA,EAAA,UAzDAH,KAAAE,MAAAH,GAAA,KAAA,IAAAA,EAAA,SAAA,YAEAT,uMCpBA,GAAA,iBAAAc,SAAA,mBAAAA,QAAAC,oMCEA,OAFA,uJHIA,mBAHA,sBACA,oBAC0B,oBAH1B"
}
