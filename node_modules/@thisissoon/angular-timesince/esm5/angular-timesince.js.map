{
  "version": 3,
  "file": "angular-timesince.js",
  "sources": [
    "~/@thisissoon/angular-timesince/angular-timesince.ts",
    "~/@thisissoon/angular-timesince/src/app/time-since/time-since.module.ts",
    "~/@thisissoon/angular-timesince/src/app/time-since/time-since.pipe.ts",
    "~/@thisissoon/angular-timesince/src/app/time-since/shared/durations.ts"
  ],
  "sourcesContent": [
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n",
    "import { NgModule } from '@angular/core';\n\nimport { TimeSincePipe } from './time-since.pipe';\n\n/**\n * A simple lightweight library for Angular 2/4+ which returns the\n * number of seconds, minutes, days, months or years since any Date\n * object based on the current system time\n *\n * @export\n * @class TimeSinceModule\n */\n@NgModule({\n  declarations: [TimeSincePipe],\n  exports: [TimeSincePipe]\n})\nexport class TimeSinceModule { }\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as durations from './shared/durations';\n\n/**\n * Based on {@link http://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site}\n * Returns the number of seconds, minutes, days, months or years since\n * any Date object based on the current system time\n *\n * @example\n * ```html\n *  <p>{{ date | timeSince }} ago</p>\n * ```\n *\n * @export\n * @class TimeSincePipe\n * @implements {PipeTransform}\n */\n@Pipe({\n  name: 'timeSince'\n})\nexport class TimeSincePipe implements PipeTransform {\n  /**\n   * Attempt to convert the input into a Date object and return the original\n   * input if not a valid date. If input is a valid date then calculate the\n   * time in seconds from Date Object to 'now'. Then try to divide the number\n   * of seconds between now and the date by the number of seconds in a year,\n   * month, day, hour or minute\n   *\n   *\n   * @param {*} value\n   * @param {*} [args]\n   * @returns {*}\n   * @memberof TimeSincePipe\n   */\n  public transform(value: any, args?: any): any {\n    const date: Date = new Date(value);\n\n    if (isNaN(date.getTime())) {\n      return value;\n    }\n\n    const seconds = Math.abs(\n      Math.floor(\n        (new Date().getTime() - date.getTime()) / durations.millisecondsInSecond\n      )\n    );\n\n    let interval = Math.floor(seconds / durations.secondsInYear);\n\n    if (interval > 1) { return `${interval} years`; }\n    if (interval === 1) { return `${interval} year`; }\n\n    interval = Math.floor(seconds / durations.secondsInMonth);\n\n    if (interval > 1) { return `${interval} months`; }\n    if (interval === 1) { return `${interval} month`; }\n\n    interval = Math.floor(seconds / durations.secondsInDay);\n\n    if (interval > 1) { return `${interval} days`; }\n    if (interval === 1) { return `${interval} day`; }\n\n    interval = Math.floor(seconds / durations.secondsInHour);\n\n    if (interval > 1) { return `${interval} hours`; }\n    if (interval === 1) { return `${interval} hour`; }\n\n    interval = Math.floor(seconds / durations.secondsInMin);\n\n    if (interval > 1) { return `${interval} minutes`; }\n    if (interval === 1) { return `${interval} minute`; }\n\n    return `${Math.floor(seconds)} ${seconds === 1 ? 'second' : 'seconds'}`;\n  }\n}\n",
    "export const secondsInYear = 31536000;\nexport const secondsInMonth = 2592000;\nexport const secondsInDay = 86400;\nexport const secondsInHour = 3600;\nexport const secondsInMin = 60;\nexport const millisecondsInSecond = 1000;\n"
  ],
  "names": [
    "__decorate",
    "durations.secondsInMin",
    "durations.secondsInHour",
    "durations.secondsInDay",
    "durations.secondsInMonth",
    "durations.secondsInYear",
    "durations.millisecondsInSecond"
  ],
  "mappings": "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"
}
