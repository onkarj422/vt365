var QueryParser = (function () {
    function QueryParser(breakpoints) {
        this.breakpoints = breakpoints;
    }
    QueryParser.prototype.parseQuery = function (input) {
        var _this = this;
        var queries = input.split(',');
        return queries.map(function (query) { return _this.parseSingleQuery(query); }).join(',');
    };
    QueryParser.prototype.parseSingleQuery = function (input) {
        var resultQueries = [];
        var queries = input.split(' and ');
        var possibleMedia = '';
        for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {
            var query = queries_1[_i];
            query = query.trim();
            var canBeEqual = query[1] === '=';
            var withoutComparison = query.replace(/^(<|>)?=?/, '');
            var breakpoint = this.breakpoints[withoutComparison];
            // If no breakpoint was found, treat as exact media query unless it can be interpreted as a number, e.g. '<980px'
            if (parseFloat(withoutComparison)) {
                breakpoint = {
                    param: 'width',
                    value: withoutComparison
                };
            }
            else if (!breakpoint) {
                resultQueries.push(query);
                continue;
            }
            if (typeof breakpoint === 'string') {
                resultQueries.push(breakpoint);
                continue;
            }
            var media = breakpoint.media;
            if (!possibleMedia && media) {
                possibleMedia = media;
            }
            if (media && media !== possibleMedia) {
                throw new Error("Clash of media property used for different breakpoints in " + breakpoint);
            }
            var value = breakpoint.value, param = breakpoint.param;
            var numValue = value;
            var units = '';
            var precisionVal = void 0;
            if (typeof value === 'string') {
                var match = breakpoint.value.match(/[a-zA-Z]+/);
                var unitIndex = (match && match.index) || value.length;
                var number = value.slice(0, unitIndex);
                numValue = parseFloat(number);
                units = value.slice(unitIndex);
                if (number.includes('.')) {
                    precisionVal = 1 / (Math.pow(10, (unitIndex - number.indexOf('.') - 1)));
                }
            }
            if (canBeEqual) {
                precisionVal = 0;
            }
            else if (breakpoint.precision) {
                precisionVal = breakpoint.precision;
            }
            else if (units === 'px') {
                precisionVal = 1;
            }
            else if (!precisionVal) {
                precisionVal = 0.1;
            }
            // Can also use no value, e.g. { media: 'screen' }
            if (value) {
                switch (query[0]) {
                    case '<':
                        query = "(max-" + breakpoint.param + ": " + (numValue - precisionVal) + units + ")";
                        break;
                    case '>':
                        query = "(min-" + breakpoint.param + ": " + (numValue + precisionVal) + units + ")";
                        break;
                    default:
                        query = "(" + breakpoint.param + ": " + value + ")";
                        break;
                }
            }
            else {
                query = '';
            }
            var suffix = breakpoint.suffix;
            if (suffix) {
                query = query ? query + " and " + suffix : suffix;
            }
            if (query) {
                resultQueries.push(query);
            }
        }
        var prefix = possibleMedia ? possibleMedia + ' and ' : '';
        return prefix + resultQueries.join(' and ');
    };
    return QueryParser;
}());
export { QueryParser };
//# sourceMappingURL=queryParser.js.map