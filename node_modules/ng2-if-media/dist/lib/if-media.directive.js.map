{"version":3,"file":"if-media.directive.js","sourceRoot":"","sources":["../../lib/if-media.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,KAAK,EAAqB,WAAW,EAAE,gBAAgB,EACnE,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;;IAmBlD,0BAAoB,WAA6B,EAAU,aAA+B,EAAU,YAA4B;QAA5G,gBAAW,GAAX,WAAW,CAAkB;QAAU,kBAAa,GAAb,aAAa,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAgB;sBAZ/G,IAAI;KAY+G;0BAThI,uCAAS;uBAAC,KAAa;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;0BAIjB,qCAAO;uBAAC,KAAa;YACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;IAKrB,mCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACrD;IAED,+BAAI,GAAJ;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;KACF;IAED,+BAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KACF;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAC3C;;gBAvCF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;iBACnC;;;;gBANsC,WAAW;gBAAE,gBAAgB;gBAE3D,cAAc;;;8BASpB,KAAK;4BAKL,KAAK;;2BAjBR;;SAQa,gBAAgB","sourcesContent":["import {\n  Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { IfMediaService } from './if-media.service';\n\n@Directive({\n  selector: '[ifMedia], [ngIfMedia]'\n})\nexport class IfMediaDirective implements OnDestroy, OnInit {\n  private media: string;\n  private hidden = true;\n\n  @Input()\n  set ngIfMedia(query: string) {\n    this.media = query;\n  }\n\n  @Input()\n  set ifMedia(query: string) {\n    this.media = query;\n  }\n\n  constructor(private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef, private mediaService: IfMediaService) {}\n\n  ngOnInit() {\n    this.mediaService.registerElement(this, this.media);\n  }\n\n  hide() {\n    if (!this.hidden) {\n      this.viewContainer.clear();\n      this.hidden = true;\n    }\n  }\n\n  show() {\n    if (this.hidden) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hidden = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.mediaService.deregisterElement(this);\n  }\n}\n"]}