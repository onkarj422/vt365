import { NgModule } from '@angular/core';
import { IfMediaDirective } from './if-media.directive';
import { IfMediaService } from './if-media.service';
import { defaultConfig } from './default.config';
import { CONFIG } from './if-media.config';
import { vendorBreakpoints } from './breakpoints';
var ɵ0 = defaultConfig;
var IfMediaModule = (function () {
    function IfMediaModule() {
    }
    IfMediaModule.withConfig = function (config) {
        var mergeVendorBreakpoints = function (obj, name) {
            if (vendorBreakpoints[name]) {
                return Object.assign(obj, vendorBreakpoints[name]);
            }
            else {
                throw new Error("No breakpoints found for vendor '" + name + "'. Check your IfMedia import config.");
            }
        };
        var _a = config.breakpoints, customBreakpoints = _a === void 0 ? {} : _a, _b = config.vendorBreakpoints, vendorNames = _b === void 0 ? [] : _b;
        if (Array.isArray(vendorNames)) {
            config.breakpoints = vendorNames.reduce(mergeVendorBreakpoints, {});
        }
        else {
            config.breakpoints = mergeVendorBreakpoints({}, vendorNames);
        }
        // Custom breakpoints should always override vendors
        config.breakpoints = Object.assign(config.breakpoints, customBreakpoints);
        return {
            ngModule: this,
            providers: [
                { provide: CONFIG, useValue: Object.assign(defaultConfig, config) }
            ]
        };
    };
    IfMediaModule.decorators = [
        { type: NgModule, args: [{
                    imports: [],
                    providers: [
                        IfMediaService,
                        { provide: CONFIG, useValue: ɵ0 }
                    ],
                    declarations: [
                        IfMediaDirective
                    ],
                    exports: [
                        IfMediaDirective
                    ]
                },] },
    ];
    /** @nocollapse */
    IfMediaModule.ctorParameters = function () { return []; };
    return IfMediaModule;
}());
export { IfMediaModule };
export { ɵ0 };
//# sourceMappingURL=if-media.module.js.map