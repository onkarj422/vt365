{"version":3,"file":"if-media.module.js","sourceRoot":"","sources":["../../lib/if-media.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;SAOjB,aAAa;;;;IAUrC,wBAAU,GAAjB,UAAkB,MAAW;QAC3B,IAAM,sBAAsB,GAAG,UAAC,GAAQ,EAAE,IAAY;YACpD,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;aACpD;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,sCAAoC,IAAI,yCAAsC,CAAC,CAAC;aACjG;SACF,CAAC;QAEM,IAAA,uBAAmC,EAAnC,2CAAmC,EAAE,6BAAmC,EAAnC,qCAAmC,CAAY;QAE5F,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;SACrE;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,WAAW,GAAG,sBAAsB,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;SAC9D;;QAGD,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAE1E,MAAM,CAAC;YACL,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE;aACpE;SACF,CAAC;KACH;;gBAzCF,QAAQ,SAAC;oBACR,OAAO,EAAE,EACR;oBACD,SAAS,EAAE;wBACT,cAAc;wBACd,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,IAAe,EAAE;qBAC7C;oBACD,YAAY,EAAE;wBACZ,gBAAgB;qBACjB;oBACD,OAAO,EAAE;wBACP,gBAAgB;qBACjB;iBACF;;;;wBApBD;;SAqBa,aAAa","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { IfMediaDirective } from './if-media.directive';\nimport { IfMediaService } from './if-media.service';\nimport { defaultConfig } from './default.config';\nimport { CONFIG } from './if-media.config';\nimport { vendorBreakpoints } from './breakpoints';\n\n@NgModule({\n  imports: [\n  ],\n  providers: [\n    IfMediaService,\n    { provide: CONFIG, useValue: defaultConfig }\n  ],\n  declarations: [\n    IfMediaDirective\n  ],\n  exports: [\n    IfMediaDirective\n  ]\n})\nexport class IfMediaModule {\n  static withConfig(config: any): ModuleWithProviders {\n    const mergeVendorBreakpoints = (obj: any, name: string) => {\n      if (vendorBreakpoints[name]) {\n        return Object.assign(obj, vendorBreakpoints[name]);\n      } else {\n        throw new Error(`No breakpoints found for vendor '${name}'. Check your IfMedia import config.`);\n      }\n    };\n\n    const { breakpoints: customBreakpoints = {}, vendorBreakpoints: vendorNames = [] } = config;\n\n    if (Array.isArray(vendorNames)) {\n      config.breakpoints = vendorNames.reduce(mergeVendorBreakpoints, {});\n    } else {\n      config.breakpoints = mergeVendorBreakpoints({}, vendorNames);\n    }\n\n    // Custom breakpoints should always override vendors\n    config.breakpoints = Object.assign(config.breakpoints, customBreakpoints);\n\n    return {\n      ngModule: this,\n      providers: [\n        { provide: CONFIG, useValue: Object.assign(defaultConfig, config) }\n      ]\n    };\n  }\n}\n"]}